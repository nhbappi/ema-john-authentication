{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\ema-john-with-router-module-53\\\\src\\\\components\\\\Shop\\\\Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport useProducts from '../../hooks/useProducts';\nimport { addToDb, getStoredCart } from '../../utilities/fakedb';\nimport Cart from '../Cart/Cart';\nimport Product from '../Product/Product';\nimport './Shop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = () => {\n  _s();\n\n  const [products, setProducts] = useProducts();\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    const storedCart = getStoredCart();\n    const savedCart = [];\n\n    for (const id in storedCart) {\n      const addedProduct = products.find(product => product.id === id);\n\n      if (addedProduct) {\n        const quantity = storedCart[id];\n        addedProduct.quantity = quantity;\n        savedCart.push(addedProduct);\n      }\n    }\n\n    setCart(savedCart);\n  }, [products]);\n\n  const handleAddToCart = selectedProduct => {\n    console.log(selectedProduct);\n    let newCart = [];\n    const exists = cart.find(product => product.id === selectedProduct.id);\n\n    if (!exists) {\n      selectedProduct.quantity = 1;\n      newCart = [...cart, selectedProduct];\n    } else {\n      const rest = cart.filter(product => product.id !== selectedProduct.id);\n      exists.quantity = exists.quantity + 1;\n      newCart = [...rest, exists];\n    }\n\n    setCart(newCart);\n    addToDb(selectedProduct.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-container\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product,\n        handleAddToCart: handleAddToCart\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-container\",\n      children: /*#__PURE__*/_jsxDEV(Cart, {\n        cart: cart,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/orders\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Review Order \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Shop, \"hBRSxC+hUsgeg5xy6FSn10z13aI=\", false, function () {\n  return [useProducts];\n});\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["C:/react/ema-john-with-router-module-53/src/components/Shop/Shop.js"],"names":["React","useEffect","useState","Link","useProducts","addToDb","getStoredCart","Cart","Product","Shop","products","setProducts","cart","setCart","storedCart","savedCart","id","addedProduct","find","product","quantity","push","handleAddToCart","selectedProduct","console","log","newCart","exists","rest","filter","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useProducts from '../../hooks/useProducts';\r\nimport { addToDb, getStoredCart } from '../../utilities/fakedb';\r\nimport Cart from '../Cart/Cart';\r\nimport Product from '../Product/Product';\r\nimport './Shop.css';\r\n\r\nconst Shop = () => {\r\n    const [products, setProducts] = useProducts();\r\n    const [cart, setCart] = useState([]);\r\n\r\n    useEffect( () =>{\r\n        const storedCart = getStoredCart();\r\n        const savedCart = [];\r\n        for(const id in storedCart){\r\n            const addedProduct = products.find(product => product.id === id);\r\n            if(addedProduct){\r\n                const quantity = storedCart[id];\r\n                addedProduct.quantity = quantity;\r\n                savedCart.push(addedProduct);\r\n            }\r\n        }\r\n        setCart(savedCart);\r\n    }, [products])\r\n\r\n    const handleAddToCart = (selectedProduct) =>{\r\n        console.log(selectedProduct);\r\n        let newCart = [];\r\n        const exists = cart.find(product => product.id === selectedProduct.id);\r\n        if(!exists){\r\n            selectedProduct.quantity = 1;\r\n            newCart = [...cart, selectedProduct];\r\n        }\r\n        else{\r\n            const rest = cart.filter(product => product.id !== selectedProduct.id);\r\n            exists.quantity = exists.quantity + 1;\r\n            newCart = [...rest, exists];\r\n        }\r\n        \r\n        setCart(newCart);\r\n        addToDb(selectedProduct.id);\r\n    }\r\n\r\n    return (\r\n        <div className='shop-container'>\r\n            <div className=\"products-container\">\r\n                {\r\n                    products.map(product=><Product \r\n                        key={product.id}\r\n                        product={product}\r\n                        handleAddToCart={handleAddToCart}\r\n                        ></Product>)\r\n                }\r\n            </div>\r\n            <div className=\"cart-container\">\r\n                <Cart cart={cart}>\r\n                    <Link to=\"/orders\">\r\n                        <button>Review Order </button>\r\n                    </Link>\r\n                </Cart>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Shop;"]},"metadata":{},"sourceType":"module"}